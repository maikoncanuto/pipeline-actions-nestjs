name: workflow_pull_request

on:
  pull_request:
      branches:
        - main
      types:
        - opened
        - closed

concurrency: 
    group: '${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}'
    cancel-in-progress: true

jobs:
    scan-packages:
      if: ${{ github.event.pull_request.merged != true}}
     
      runs-on: ubuntu-latest
      continue-on-error: true

      steps:
          - name: Step Checkout Code
            uses: actions/checkout@v3

          - name: Step Nodejs environment
            uses: actions/setup-node@v3
            with:
              node-version: '18.x'

          - name:
            run: npm audit
            env: 
              CI: true

    pull-request-merged: 
      if: ${{ github.event.pull_request.merged == true}}
      runs-on: ubuntu-latest

      permissions:
          contents: write

      steps:
          - name: Step Checkout Code
            uses: actions/checkout@v3

          - name: Step Nodejs environment
            uses: actions/setup-node@v3
            with:
              node-version: '18.x'

          - name: Step Configure Git
            run: |
              git config --local user.email "actions@github.com"
              git config --local user.name "GitHub Actions"

          - name: Step Change version
            run: |
              REF_NAME="${GITHUB_HEAD_REF}"

              if [[ "$REF_NAME" == *feature* ]]; then
                  npm version minor
              elif [[ "$REF_NAME" == *bugfix* ]]; then
                  npm version patch
              elif [[ "$REF_NAME" == *hotfix* ]]; then
                  npm version patch
              else
                  echo "This branch is not a feature or bugfix or hotfix branch"
              fi

          - name: Step Commit versions
            run: |
              git push
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    create-tag:
      if: ${{ github.event.pull_request.merged == true}}
      needs: [ pull-request-merged ]
      runs-on: ubuntu-latest

      permissions:
        contents: write

        steps:
          - name: Checkout do RepositÃ³rio
            uses: actions/checkout@v3

          - name: Step Get Package Version
            run: |
              export VERSION=$(node -p "require('./package.json').version")
              echo "VERSION=$VERSION" >> $GITHUB_ENV

          - name: Step Configure Git
            run: |
              git config --local user.email "actions@github.com"
              git config --local user.name "GitHub Actions"

          - name: Step Create Tag from code
            run: |
              git tag -a v${{ env.VERSION }} -m "Creating a tag for main in the version ${{ env.VERSION }} - ${{github.repository}}-${{github.ref}}-${{github.sha}}"
              git push origin v${{ env.VERSION }}
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}